@page "/Rl/{videoId?}"
@using Jaydlc.Core
@using System.Collections.Specialized
@using Microsoft.Extensions.Logging
@inject VideoManager VideoManager
@inject ILogger Logger

@* <h3>Jay's Rocket League Clips</h3> *@
<Title Value="Jay's RL Clips"/>


@if (VideoId is null)
{
    <div class="row">
        @foreach (var video in VideoManager.Videos)
        {
            <MatCard Class="col-lg-3 col-xs-1 m-2">
                <MatCardContent>
                    <MatCardMedia Wide="true" ImageUrl="@video.Thumbnail"></MatCardMedia>
                    <div style="padding: 1rem">
                        <MatHeadline6>@video.Title</MatHeadline6>
                        <MatSubtitle2>@video.ParsedUploadDate.ToShortDateString()</MatSubtitle2>
                    </div>

                    <MatBody2>
                        @video.Description
                    </MatBody2>
                </MatCardContent>
            </MatCard>
        }
    </div>
}
else
{
    <LinkedVideo Video="@VideoManager.Videos.SingleOrDefault(x => x.Id == VideoId)"/>
}

<button class="btn btn-primary" @onclick="UpdateVideos">Update Videos</button>

@code {

    [Parameter]
    public string? VideoId { get; set; } = null;

    protected override void OnInitialized()
    {
        VideoManager.Videos.CollectionChanged += VideosUpdated;
    }

    private void VideosUpdated(object? sender, NotifyCollectionChangedEventArgs e)
    {
        this.InvokeAsync(StateHasChanged);
    }

    private async Task UpdateVideos()
    {
        await VideoManager.DownloadPlaylistInfo(data => Logger.LogInformation(data));
    }

}